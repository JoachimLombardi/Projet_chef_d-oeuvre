name: Django CI/CD with Docker Compose

on:
  push:
    branches:
      - master  # ou une branche principale spécifique
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_USER: ${{ secrets.DATABASE_USER }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT}}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Étape pour installer Docker Compose
    - name: Set up Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    # Étape pour construire et démarrer les services avec Docker Compose
    - name: Build and start services with Docker Compose
      run: docker-compose -f pubmed_analyze/docker/docker-compose.yml up --build -d

    - name: Limit resources for Django container
      run: docker container update --memory 4g --memory-swap 4g django
      
    - name: Print environment variables
      run: echo $DB_HOST | echo $DB_USER | echo $DB_PASSWORD  

    # Exécuter les tests avec Docker Compose
    - name: Run tests
      run: docker exec django python manage.py test polls 
    


    # Étape pour arrêter les services après les tests
    - name: Stop services
      run: docker-compose -f pubmed_analyze/docker/docker-compose.yml down



