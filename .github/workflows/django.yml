name: Django CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # test:
  #   runs-on: ubuntu-latest

    # env:
    #   ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
    #   DATABASE_URL: ${{ secrets.DATABASE_URL }}
    #   DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
    #   DATABASE_USER: ${{ secrets.DATABASE_USER }}
    #   DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
    #   DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
    #   DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
    #   EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
    #   EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
    #   OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    #   ERROR_NOTIFICATION_EMAIL: ${{ secrets.EMAIL_HOST_USER }}
    #   DEFAULT_FROM_EMAIL: ${{ secrets.EMAIL_HOST_USER }}
    #   REGISTRY_SERVER: ${{ secrets.REGISTRY_SERVER }}
    #   REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
    #   REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

    # services:
    #   postgres:
    #     image: postgres:16
    #     env:
    #       POSTGRES_DB: ${{ secrets.DATABASE_NAME }}
    #       POSTGRES_USER: ${{ secrets.DATABASE_USER }}
    #       POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd="pg_isready -U ${{ secrets.DATABASE_USER }} -d ${{ secrets.DATABASE_NAME }}"
    #       --health-interval=10s
    #       --health-timeout=5s
    #       --health-retries=5 

    # steps:
    # - name: Checkout code
    #   uses: actions/checkout@v2

    # - name: Set up Python
    #   uses: actions/setup-python@v2
    #   with:
    #     python-version: '3.12.7'

    # - name: Install dependencies
    #   run: |
    #     pip install -r pubmed_analyze/docker/requirements.txt

    # - name: Run tests
    #   run: |
    #     python pubmed_analyze/manage.py test polls
    #   env:
    #     DATABASE_URL: ${{ secrets.DATABASE_URL }}
    #     DJANGO_SETTINGS_MODULE: pubmed_analyze.settings

  deploy:
    runs-on: ubuntu-latest
    env:
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_USER: ${{ secrets.DATABASE_USER }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ERROR_NOTIFICATION_EMAIL: ${{ secrets.EMAIL_HOST_USER }}
      DEFAULT_FROM_EMAIL: ${{ secrets.EMAIL_HOST_USER }}
      REGISTRY_SERVER: ${{ secrets.REGISTRY_SERVER }}
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}  

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: pubmed-container-group  
        slot-name: 'production'
        package: ./pubmed_analyze

