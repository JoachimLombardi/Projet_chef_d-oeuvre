# Dockerfile.django

# Utiliser une image Python comme base
FROM joachimlombardi/pubmed_dependencies:latest

ARG ALLOWED_HOSTS
ARG DATABASE_HOST
ARG DATABASE_USER
ARG DATABASE_PASSWORD
ARG DATABASE_NAME
ARG DATABASE_PORT
ARG EMAIL_HOST_USER
ARG EMAIL_HOST_PASSWORD


ENV ALLOWED_HOSTS=${ALLOWED_HOSTS}
ENV DATABASE_HOST=${DATABASE_HOST}
ENV DATABASE_USER=${DATABASE_USER}
ENV DATABASE_PASSWORD=${DATABASE_PASSWORD}
ENV DATABASE_NAME=${DATABASE_NAME}
ENV DATABASE_PORT=${DATABASE_PORT}
ENV EMAIL_HOST_USER=${EMAIL_HOST_USER}
ENV EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}

# Définir le répertoire de travail dans le conteneur
WORKDIR /pubmed_analyze

# Copier le reste de l'application
COPY ../ /pubmed_analyze/

# Exposer le port 8000 pour Django
EXPOSE 8000

# Copier le script entrypoint
COPY ./entrypoint.sh /pubmed_analyze/entrypoint.sh

# Donner les droits d'exécution
RUN chmod +x /pubmed_analyze/entrypoint.sh

# Spécifier le script d'entrée
# ENTRYPOINT ["/pubmed_analyze/entrypoint.sh"]

# Commande par défaut (lancée par ENTRYPOINT)
CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]


